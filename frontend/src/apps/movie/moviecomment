Absolutely! Let’s build a **Movie Search & Detail Viewer** using React. This is a **fantastic project** for learning:

✅ API fetching
✅ React Router for page navigation
✅ Component reuse
✅ Conditional rendering (loading/error states)

---

## 🎬 **Project Overview**

### 🔍 Features:

* Search movies by title using the [OMDb API](http://www.omdbapi.com/)
* Display movie list (title, poster, year)
* Click on a movie to view detailed info (plot, actors, etc.)
* Loading and error handling

---

## 🧱 Step-by-Step Plan

### 1. **Set up the project**

```bash
npx create-react-app movie-search-app
cd movie-search-app
npm install react-router-dom
```

---

### 2. **Get OMDb API Key**

* Go to [http://www.omdbapi.com/apikey.aspx](http://www.omdbapi.com/apikey.aspx)
* Sign up for a free key
* Save it (you’ll need it in the fetch URL)

---

### 3. **File Structure**

```
src/
├── components/
│   ├── MovieCard.jsx
│   └── MovieDetail.jsx
├── pages/
│   └── SearchPage.jsx
├── App.jsx
└── index.js
```

---

## 🧩 Sample Code

### 🔹 `App.jsx` — Set up routing

```jsx
import React from "react";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import SearchPage from "./pages/SearchPage";
import MovieDetail from "./components/MovieDetail";

function App() {
  return (
    <Router>
      <div className="container mt-4">
        <h2>🎬 Movie Search App</h2>
        <Routes>
          <Route path="/" element={<SearchPage />} />
          <Route path="/movie/:imdbID" element={<MovieDetail />} />
        </Routes>
      </div>
    </Router>
  );
}

export default App;
```

---

### 🔹 `SearchPage.jsx`

```jsx
import React, { useState } from "react";
import MovieCard from "../components/MovieCard";

const API_KEY = "your_api_key_here";

const SearchPage = () => {
  const [query, setQuery] = useState("");
  const [movies, setMovies] = useState([]);
  const [loading, setLoading] = useState(false);

  const searchMovies = async () => {
    setLoading(true);
    try {
      const res = await fetch(`https://www.omdbapi.com/?s=${query}&apikey=${API_KEY}`);
      const data = await res.json();
      setMovies(data.Search || []);
    } catch (err) {
      console.error("Error fetching movies", err);
    }
    setLoading(false);
  };

  return (
    <div>
      <input
        type="text"
        value={query}
        placeholder="Search for a movie..."
        onChange={(e) => setQuery(e.target.value)}
        className="form-control mb-2"
      />
      <button className="btn btn-primary mb-3" onClick={searchMovies}>
        Search
      </button>

      {loading && <p>Loading...</p>}

      <div className="row">
        {movies.map((movie) => (
          <div className="col-md-3 mb-3" key={movie.imdbID}>
            <MovieCard movie={movie} />
          </div>
        ))}
      </div>
    </div>
  );
};

export default SearchPage;
```

---

### 🔹 `MovieCard.jsx`

```jsx
import React from "react";
import { Link } from "react-router-dom";

const MovieCard = ({ movie }) => {
  return (
    <div className="card h-100">
      <img src={movie.Poster} alt={movie.Title} className="card-img-top" />
      <div className="card-body">
        <h5 className="card-title">{movie.Title}</h5>
        <p className="card-text">{movie.Year}</p>
        <Link to={`/movie/${movie.imdbID}`} className="btn btn-sm btn-outline-primary">
          View Details
        </Link>
      </div>
    </div>
  );
};

export default MovieCard;
```

---

### 🔹 `MovieDetail.jsx`

```jsx
import React, { useEffect, useState } from "react";
import { useParams, Link } from "react-router-dom";

const API_KEY = "your_api_key_here";

const MovieDetail = () => {
  const { imdbID } = useParams();
  const [movie, setMovie] = useState(null);

  useEffect(() => {
    const fetchMovie = async () => {
      const res = await fetch(`https://www.omdbapi.com/?i=${imdbID}&apikey=${API_KEY}`);
      const data = await res.json();
      setMovie(data);
    };
    fetchMovie();
  }, [imdbID]);

  if (!movie) return <p>Loading...</p>;

  return (
    <div>
      <Link to="/" className="btn btn-secondary mb-3">← Back to Search</Link>
      <h2>{movie.Title} ({movie.Year})</h2>
      <img src={movie.Poster} alt={movie.Title} />
      <p><strong>Genre:</strong> {movie.Genre}</p>
      <p><strong>Plot:</strong> {movie.Plot}</p>
      <p><strong>Actors:</strong> {movie.Actors}</p>
      <p><strong>IMDB Rating:</strong> {movie.imdbRating}</p>
    </div>
  );
};

export default MovieDetail;
```

---

## ✅ Next Steps

* Replace `"your_api_key_here"` with your actual OMDb key.
* Add Bootstrap (optional):

  ```html
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
  />
  ```

---

Would you like me to:

* Help you build this step-by-step?
* Add features like **pagination**, **debounce**, or **favorites**?
* Convert it into a portfolio project with polished UI?

Let’s keep going at your pace!
